~extensions start~
~extensions import *~

~[MACRO_QueueName]~ -> queue787231
~[MACRO_QueueName]~ -> queue787231
~[MACRO_QueueName]~ -> queue787231
~[MACRO_QueueName]~ -> queue787231
~[MACRO_Create_Queue]~ -> Queue<~[TYPE@1]~> ~[MACRO_QueueName@1]~ = new PriorityQueue<>();
~[MACRO_Create_Queue]~ -> Queue<~[TYPE@1]~> ~[MACRO_QueueName@1]~ = new ArrayDeque<>();
~[MACRO_Create_Queue]~ -> Queue<~[TYPE@1]~> ~[MACRO_QueueName@1]~ = new LinkedList<>();

~[MACRO_Add_EXPR_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[EXPR_~[TYPE@1]~]~);
~[MACRO_Add_EXPR_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[EXPR_~[TYPE@1]~]~);
~[MACRO_Add_CONST_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[CONST_~[TYPE@1]~]~);
~[MACRO_Add_CONST_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[CONST_~[TYPE@1]~]~);
~[MACRO_Add_VAR_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[VAR_~[TYPE@1]~]~);
~[MACRO_Add_VAR_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[VAR_~[TYPE@1]~]~);

~[MACRO_Add_Fixed_EXPR_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[EXPR_~[TYPE@1]~@1]~);
~[MACRO_Add_Fixed_EXPR_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[EXPR_~[TYPE@1]~@1]~);
~[MACRO_Add_Fixed_VAR_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[VAR_~[TYPE@1]~@1]~);
~[MACRO_Add_Fixed_VAR_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[VAR_~[TYPE@1]~@1]~);
~[MACRO_Add_Fixed_CONST_ToQueue]~ -> ~[MACRO_QueueName@1]~.add(~[CONST_~[TYPE@1]~@1]~);
~[MACRO_Add_Fixed_CONST_ToQueue]~ -> ~[MACRO_QueueName@1]~.offer(~[CONST_~[TYPE@1]~@1]~);
~extensions end~

~main body start~

~imports start~
import java.util.*;
import java.util.concurrent.*;
~imports end~

~template simple_poll_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.poll();
~template end~

~template simple_poll_negative start~
~[MACRO_Create_Queue]~
~[MACRO_Add_EXPR_ToQueue]~
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.poll();
~template end~

~template simple_peek_negative start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[MACRO_QueueName@1]~.poll();
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.peek();
~template end~

~template queue_is_empty_1_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[TYPE@1]~ value7843 = ~[MACRO_QueueName@1]~.peek();
if (~[MACRO_QueueName@1]~.isEmpty()) {
    value7843 = ~[CONST_~[TYPE@1]~]~;
}
~[VAR_~[TYPE@1]~@1]~ = value7843;
~template end~

~template queue_is_empty_1_negative start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[TYPE@1]~ value7843 = ~[MACRO_QueueName@1]~.poll();
if (~[MACRO_QueueName@1]~.isEmpty()) {
    value7843 = ~[CONST_~[TYPE@1]~]~;
}
~[VAR_~[TYPE@1]~@1]~ = value7843;
~template end~

~template queue_poll_negative start~
~[MACRO_Create_Queue]~
~[MACRO_Add_CONST_ToQueue]~
~[MACRO_Add_CONST_ToQueue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.poll();
~template end~

~template queue_poll_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[MACRO_Add_CONST_ToQueue]~
~[MACRO_Add_CONST_ToQueue]~
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.poll();
~template end~

~template queue_contains_1_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_EXPR_ToQueue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[TYPE@1]~ value7845 = ~[CONST_TYPE@1]~;
if (~[MACRO_QueueName@1]~.contains(~[VAR_~[TYPE@1]~@1]~)) {
    value7845 = ~[VAR_~[TYPE@1]~@1]~;
}
~[VAR_~[TYPE@1]~@1]~ = value7845;
~template end~

~template queue_poll_all_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_EXPR_ToQueue]~
~[MACRO_Add_EXPR_ToQueue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[TYPE@1]~ value7847 = ~[CONST_TYPE@1]~;
while (!~[MACRO_QueueName@1]~.isEmpty()) {
    value7847 = ~[MACRO_QueueName@1]~.poll();
}
~[VAR_~[TYPE@1]~@1]~ = value7847;
~template end~

~template queue_remove_if_positive start~
~[MACRO_Create_Queue]~
~[MACRO_Add_Fixed_CONST_ToQueue]~
~[MACRO_Add_Fixed_VAR_ToQueue]~
~[MACRO_QueueName@1]~.removeIf(item -> item.equals(~[CONST_~[TYPE@1]~@1]~));
~[VAR_~[TYPE@1]~@1]~ = ~[MACRO_QueueName@1]~.poll();
~template end~

~template two_queues_positive start~
Queue<~[TYPE@1]~> sourceQueue = new ArrayDeque<>();
Queue<~[TYPE@1]~> targetQueue = new ArrayDeque<>();
sourceQueue.add(~[EXPR_~[TYPE@1]~]~);
sourceQueue.add(~[EXPR_~[TYPE@1]~]~);
targetQueue.add(~[VAR_~[TYPE@1]~@1]~);
targetQueue.add(~[EXPR_~[TYPE@1]~]~);
while (!sourceQueue.isEmpty()) {
    targetQueue.offer(sourceQueue.poll());
}
~[VAR_~[TYPE@1]~@1]~ = targetQueue.poll();
~template end~


~main body end~
