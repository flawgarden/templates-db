~extensions start~
~extensions import *~

~[MACRO_Empty_string_Array]~ -> {"", ""}
~[MACRO_Empty_string_Array]~ -> {"", "", ""}
~[MACRO_Empty_string_Array]~ -> {"", "", "", ""}

~[MACRO_Zero_Or_One]~ -> 0
~[MACRO_Zero_Or_One]~ -> 1
~extensions end~

~main body start~
~helper import sensitivity/field/helpers/StringHolder~
~helper import sensitivity/field/helpers/ArrayHolder~
~helper import sensitivity/field/helpers/StringFactory~
~helper import sensitivity/field/helpers/NestedStringHolder~

~imports start~
using HelperFields;
~imports end~

~template class_with_string_initialization_positive start~
StringHolder sh = new StringHolder(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = sh.value;
~template end~

~template class_with_string_initialization_negative start~
StringHolder sh = new StringHolder();
~[BODY]~
~[VAR_string]~ = sh.value;
~template end~

~template class_with_nested_string_initialization_positive start~
NestedStringHolder nsh = new NestedStringHolder(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = nsh.getValue();
~template end~

~template class_with_nested_string_initialization_negative start~
NestedStringHolder nsh = new NestedStringHolder();
~[BODY]~
~[VAR_string]~ = nsh.getValue();
~template end~

~template class_with_array_initialization_by_value_positive start~
ArrayHolder ah = new ArrayHolder(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = ah.values[0];
~template end~

~template class_with_array_initialization_by_value_negative start~
ArrayHolder ah = new ArrayHolder(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = ah.values[1];
~template end~

~template class_with_array_initialization_by_value_neutral start~
ArrayHolder ah = new ArrayHolder(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = ah.values[~[MACRO_Zero_Or_One]~];
~template end~

~template class_with_array_initialization_positive start~
string[] tmpArrayUnique42 = ~[MACRO_Empty_string_Array]~;
tmpArrayUnique42[0] = ~[VAR_string@1]~;
ArrayHolder ah = new ArrayHolder(tmpArrayUnique42);
~[BODY]~
~[VAR_string@1]~ = ah.values[0];
~template end~

~template class_with_array_initialization_negative start~
string[] tmpArrayUnique42 = ~[MACRO_Empty_string_Array]~;
tmpArrayUnique42[0] = ~[VAR_string@1]~;
ArrayHolder ah = new ArrayHolder(tmpArrayUnique42);
~[BODY]~
~[VAR_string@1]~ = ah.values[1];
~template end~

~template class_with_array_initialization_neutral start~
string[] tmpArrayUnique42 = ~[MACRO_Empty_string_Array]~;
tmpArrayUnique42[0] = ~[VAR_string@1]~;
ArrayHolder ah = new ArrayHolder(tmpArrayUnique42);
~[BODY]~
~[VAR_string@1]~ = ah.values[~[MACRO_Zero_Or_One]~];
~template end~

~template string_factory_positive start~
StringFactory sf = StringFactory.createInstance(~[VAR_string@1]~);
~[BODY]~
~[VAR_string@1]~ = sf.val;
~template end~

~template string_factory_negative start~
StringFactory sf = StringFactory.createInstance();
~[BODY]~
~[VAR_string]~ = sf.val;
~template end~

~main body end~
