~extensions start~
~extensions import *~

~[DEFINE_RegexName]~ -> regex42
~[DEFINE_FixedVar]~ -> ~[VAR_string@1]~
~[DEFINE_ConstStringName]~ -> str42
~[DEFINE_IfMatch]~ -> if (Regex.IsMatch(~[DEFINE_ConstStringName]~, ~[DEFINE_RegexName]~))
~[DEFINE_Count]~ -> Regex.Count(~[DEFINE_ConstStringName]~, ~[DEFINE_RegexName]~)
~[DEFINE_NullifyFixedVar]~ -> ~[DEFINE_FixedVar]~ = "";
~extensions end~

~main body start~

~imports start~
using System.Text.RegularExpressions;
~imports end~

~template regex_exactly_match_negative start~
var ~[DEFINE_RegexName]~ = @"42";
var ~[DEFINE_ConstStringName]~ = "42";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_escaping_positive start~
var ~[DEFINE_RegexName]~ = @"\.+";
var ~[DEFINE_ConstStringName]~ = "42";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_char_group_negative start~
var ~[DEFINE_RegexName]~ = @"[ab]+";
var ~[DEFINE_ConstStringName]~ = "aaa";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_not_char_group_positive start~
var ~[DEFINE_RegexName]~ = @"[^ab]+";
var ~[DEFINE_ConstStringName]~ = "aaa";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_anchor_negative start~
var ~[DEFINE_RegexName]~ = @"42\z";
var ~[DEFINE_ConstStringName]~ = "10042";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_anchor_positive start~
var ~[DEFINE_RegexName]~ = @"^101";
var ~[DEFINE_ConstStringName]~ = "10042";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_backreference_positive start~
var ~[DEFINE_RegexName]~ = @"(kek)\1";
var ~[DEFINE_ConstStringName]~ = "kek";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_named_backreference_negative start~
var ~[DEFINE_RegexName]~ = @"(?<g1>kek)\k<g1>";
var ~[DEFINE_ConstStringName]~ = "kekkek";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_counting_quantifier_negative start~
var ~[DEFINE_RegexName]~ = @"k{3,5}";
var ~[DEFINE_ConstStringName]~ = "kkk";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_count_positive start~
var ~[DEFINE_RegexName]~ = @"k+";
var ~[DEFINE_ConstStringName]~ = "kkk";
if (~[DEFINE_Count]~ > 1) {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_alternation_negative start~
var ~[DEFINE_RegexName]~ = @"(a|b)";
var ~[DEFINE_ConstStringName]~ = "b";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_lookarounds_positive start~
var ~[DEFINE_RegexName]~ = @"..(?<!42)";
var ~[DEFINE_ConstStringName]~ = "42";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_options_negative start~
var ~[DEFINE_RegexName]~ = @"abc";
var ~[DEFINE_ConstStringName]~ = "AbC";
if (Regex.IsMatch(~[DEFINE_ConstStringName]~, ~[DEFINE_RegexName]~, RegexOptions.IgnoreCase)) {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_inline_options_negative start~
var ~[DEFINE_RegexName]~ = @"a(?i)b(?-i)c";
var ~[DEFINE_ConstStringName]~ = "aBc";
~[DEFINE_IfMatch]~ {
    ~[DEFINE_NullifyFixedVar]~
}
~template end~

~template regex_replace_positive start~
var ~[DEFINE_RegexName]~ = @"aboba";
var ~[DEFINE_ConstStringName]~ = "aboba";
~[DEFINE_FixedVar]~ = Regex.Replace(~[DEFINE_ConstStringName]~, ~[DEFINE_RegexName]~, ~[DEFINE_FixedVar]~);
~template end~

~template regex_replace_with_substitution_negative start~
var ~[DEFINE_RegexName]~ = @".+(?<grp>aboba)\z";
~[DEFINE_FixedVar]~ = Regex.Replace(~[DEFINE_FixedVar]~ + "aboba", ~[DEFINE_RegexName]~, @"${grp}");
~template end~

~template regex_split_positive start~
var ~[DEFINE_RegexName]~ = @"(/|-)";
~[DEFINE_FixedVar]~ = Regex.Split("y-" + ~[DEFINE_FixedVar]~ + "/x", ~[DEFINE_RegexName]~)[2];
~template end~

~template regex_matches_positive start~
var ~[DEFINE_RegexName]~ = @"/.+/.+/";
~[DEFINE_FixedVar]~ = Regex.Matches("-/" + ~[DEFINE_FixedVar]~ + "/x/", ~[DEFINE_RegexName]~)[0].Value;
~template end~

~main body end~
