~extensions start~
~extensions import *~

~[MACRO_DivideByZero]~ -> 1 / (~[VAR_int@1]~ - ~[VAR_int@1]~)
~extensions end~

~main body start~
~helper import sensitivity/exceptions/helpers/Exceptions~

~imports start~
using HelperExceptions;
~imports end~

~template arithmetic_exception_positive start~
string tmpUnique42 = ~[VAR_string@1]~;
try {
    int a = 42;
    a = ~[MACRO_DivideByZero]~;
} catch (DivideByZeroException e) {
    ~[VAR_string@1]~ = tmpUnique42;
}
~template end~

~template arithmetic_exception_negative start~
try {
    int a = -42;
    a = ~[MACRO_DivideByZero]~;
} catch (DivideByZeroException e) {
    ~[VAR_string]~ = "";
}
~template end~

~template null_pointer_exception_positive start~
string tmpUnique42 = ~[VAR_string@1]~;
try {
    int? a = null;
    a = a + a;
} catch (NullReferenceException e) {
    ~[VAR_string@1]~ = tmpUnique42;
}
~template end~

~template null_pointer_exception_negative start~
try {
    int? a = null;
    a = a + a;
} catch (NullReferenceException e) {
    ~[VAR_string]~ = "";
}
~template end~

~main body end~
